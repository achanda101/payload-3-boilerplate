/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {
    secondarycta: Secondarycta;
    scolInfoBlk: ScolInfoBlk;
    mcolInfoBlock: McolInfoBlock;
    grantCardGridBlock: GrantCardGridBlock;
    mstepProcess: MstepProcess;
    comparisonBlk: ComparisonBlk;
    ylwDeck: YlwDeck;
    featCrd: FeatCrd;
    listCrdDck: ListCrdDck;
    faqBlk: FaqBlk;
  };
  collections: {
    grants: Grant;
    grantcards: Grantcard;
    posts: Post;
    mediaCloud: MediaCloud;
    assetCloud: AssetCloud;
    documents: Document;
    categories: Category;
    users: User;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    grants: GrantsSelect<false> | GrantsSelect<true>;
    grantcards: GrantcardsSelect<false> | GrantcardsSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    mediaCloud: MediaCloudSelect<false> | MediaCloudSelect<true>;
    assetCloud: AssetCloudSelect<false> | AssetCloudSelect<true>;
    documents: DocumentsSelect<false> | DocumentsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    homepage: Homepage;
    header: Header;
    footer: Footer;
    nav: Nav;
    contactInfo: ContactInfo;
  };
  globalsSelect: {
    homepage: HomepageSelect<false> | HomepageSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    nav: NavSelect<false> | NavSelect<true>;
    contactInfo: ContactInfoSelect<false> | ContactInfoSelect<true>;
  };
  locale:
    | 'en'
    | 'ar'
    | 'bi'
    | 'bn-IN'
    | 'br'
    | 'ch'
    | 'prs-Arab'
    | 'km'
    | 'hi'
    | 'ms'
    | 'ne'
    | 'ps-Arab'
    | 'pcm'
    | 'si'
    | 'tl'
    | 'ta'
    | 'th'
    | 'vi'
    | 'ur';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "secondarycta".
 */
export interface Secondarycta {
  ctaTitle?: string | null;
  ctaSubtitle?: string | null;
  contact?: {
    label?: string | null;
    email?: string | null;
  };
  ctaButton?:
    | {
        link?: {
          type?: ('reference' | 'custom' | 'email' | 'document') | null;
          newTab?: boolean | null;
          downloadLink?: boolean | null;
          arrowLink?: boolean | null;
          pillSolid?: boolean | null;
          pillOutline?: boolean | null;
          reference?:
            | ({
                relationTo: 'grants';
                value: number | Grant;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          email?: string | null;
          doc?: {
            relationTo: 'documents';
            value: number | Document;
          } | null;
          label?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'secondarycta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "grants".
 */
export interface Grant {
  id: number;
  title: string;
  pageType: 'landing' | 'individual';
  grantCard?: (number | null) | Grantcard;
  heroTitle?: string | null;
  heroSubtitle?: string | null;
  bgType?: ('wavy_top' | 'wavy_full' | 'center_blob') | null;
  heroButtons?:
    | {
        link?: {
          type?: ('reference' | 'custom' | 'email' | 'document') | null;
          newTab?: boolean | null;
          downloadLink?: boolean | null;
          arrowLink?: boolean | null;
          pillSolid?: boolean | null;
          pillOutline?: boolean | null;
          reference?:
            | ({
                relationTo: 'grants';
                value: number | Grant;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          email?: string | null;
          doc?: {
            relationTo: 'documents';
            value: number | Document;
          } | null;
          label?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  heroContact?: {
    label?: string | null;
    email?: string | null;
  };
  contentBlocks?:
    | (
        | ScolInfoBlk
        | McolInfoBlock
        | GrantCardGridBlock
        | MstepProcess
        | ComparisonBlk
        | YlwDeck
        | FeatCrd
        | ListCrdDck
        | FaqBlk
      )[]
    | null;
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "grantcards".
 */
export interface Grantcard {
  id: number;
  title: string;
  desc?: string | null;
  badgeText?: string | null;
  badgeType?: ('info' | 'imp' | 'inactive') | null;
  activePeriod?: ('open_all_year' | 'specific_period' | 'closed') | null;
  startDate?: string | null;
  endDate?: string | null;
  /**
   * Select a colour for the Grant Card background. Choose "Transparent" if it is a Special Grant.
   */
  cardColour?: ('forest' | 'turmeric' | 'sky' | 'rose' | 'lavender' | 'fire' | 'trans') | null;
  /**
   * Upload a mascot image for the Grant Card
   */
  mascot?: (number | null) | AssetCloud;
  grantSpecs?:
    | {
        spec?: string | null;
        id?: string | null;
      }[]
    | null;
  grantUses?: string | null;
  cardButtons?:
    | {
        link?: {
          type?: ('reference' | 'custom' | 'email' | 'document') | null;
          newTab?: boolean | null;
          downloadLink?: boolean | null;
          arrowLink?: boolean | null;
          pillSolid?: boolean | null;
          pillOutline?: boolean | null;
          reference?:
            | ({
                relationTo: 'grants';
                value: number | Grant;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          email?: string | null;
          doc?: {
            relationTo: 'documents';
            value: number | Document;
          } | null;
          label?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Upload and manage design assets like logos, mascots, icons, brand illustrations here.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "assetCloud".
 */
export interface AssetCloud {
  id: number;
  alt: string;
  caption?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | MediaCloud;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaCloud".
 */
export interface MediaCloud {
  id: number;
  alt: string;
  caption?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  /**
   * Upload a profile picture
   */
  avatar?: (number | null) | MediaCloud;
  role?: ('admin' | 'editor' | 'writer') | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * Upload and manage documents like PDFs, Word files, text files here. Maximum file size is 50MB.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents".
 */
export interface Document {
  id: number;
  alt: string;
  caption?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "scolInfoBlk".
 */
export interface ScolInfoBlk {
  title?: string | null;
  desc?: string | null;
  colBtns?:
    | {
        link?: {
          type?: ('reference' | 'custom' | 'email' | 'document') | null;
          newTab?: boolean | null;
          downloadLink?: boolean | null;
          arrowLink?: boolean | null;
          pillSolid?: boolean | null;
          pillOutline?: boolean | null;
          reference?:
            | ({
                relationTo: 'grants';
                value: number | Grant;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          email?: string | null;
          doc?: {
            relationTo: 'documents';
            value: number | Document;
          } | null;
          label?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'scolInfoBlk';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mcolInfoBlock".
 */
export interface McolInfoBlock {
  multicols?:
    | {
        title?: string | null;
        colContent?: string | null;
        addLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom' | 'email' | 'document') | null;
          newTab?: boolean | null;
          downloadLink?: boolean | null;
          arrowLink?: boolean | null;
          pillSolid?: boolean | null;
          pillOutline?: boolean | null;
          reference?:
            | ({
                relationTo: 'grants';
                value: number | Grant;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          email?: string | null;
          doc?: {
            relationTo: 'documents';
            value: number | Document;
          } | null;
          label?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mcolInfoBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "grantCardGridBlock".
 */
export interface GrantCardGridBlock {
  title?: string | null;
  desc?: string | null;
  /**
   * Grant Cards to display. Pre-populated with all active grants (excludes closed grants). You can reorder or remove cards as needed.
   */
  grantCardGrid?: (number | Grantcard)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'grantCardGridBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mstepProcess".
 */
export interface MstepProcess {
  title?: string | null;
  subtitle?: string | null;
  steps?:
    | {
        stepTitle?: string | null;
        title?: string | null;
        icon?:
          | ('FileText' | 'Clock' | 'ShieldCheck' | 'Vote' | 'ScrollText' | 'Banknote' | 'Rocket' | 'FileCheck')
          | null;
        /**
         * Enter details for the step in bullet form
         */
        details?:
          | {
              bullet?: string | null;
              id?: string | null;
            }[]
          | null;
        /**
         * Enter any extra information that maybe useful in the step.
         */
        tip?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mstepProcess';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comparisonBlk".
 */
export interface ComparisonBlk {
  title?: string | null;
  desc?: string | null;
  lftGrp?: {
    title?: string | null;
    desc?: string | null;
    /**
     * Points in the left column will have a checkmark
     */
    lftPoints?:
      | {
          point?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  rtGrp?: {
    title?: string | null;
    desc?: string | null;
    /**
     * Points in the right column will have a cross mark
     */
    rtPoints?:
      | {
          point?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  buttons?:
    | {
        link?: {
          type?: ('reference' | 'custom' | 'email' | 'document') | null;
          newTab?: boolean | null;
          downloadLink?: boolean | null;
          arrowLink?: boolean | null;
          pillSolid?: boolean | null;
          pillOutline?: boolean | null;
          reference?:
            | ({
                relationTo: 'grants';
                value: number | Grant;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          email?: string | null;
          doc?: {
            relationTo: 'documents';
            value: number | Document;
          } | null;
          label?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'comparisonBlk';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ylwDeck".
 */
export interface YlwDeck {
  title?: string | null;
  desc?: string | null;
  /**
   * Add yellow cards to be displayed in the deck
   */
  cards?:
    | {
        title?: string | null;
        subtitle?: string | null;
        desc?: string | null;
        /**
         * Mascot image for the yellow card
         */
        mascot?: (number | null) | AssetCloud;
        /**
         * Position of the mascot image on the yellow card
         */
        mascotPos?: ('top_left' | 'center') | null;
        links?:
          | {
              desc?: string | null;
              link?: {
                type?: ('reference' | 'custom' | 'email' | 'document') | null;
                newTab?: boolean | null;
                downloadLink?: boolean | null;
                arrowLink?: boolean | null;
                pillSolid?: boolean | null;
                pillOutline?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'grants';
                      value: number | Grant;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: number | Post;
                    } | null);
                url?: string | null;
                email?: string | null;
                doc?: {
                  relationTo: 'documents';
                  value: number | Document;
                } | null;
                label?: string | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ylwDeck';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "featCrd".
 */
export interface FeatCrd {
  /**
   * Upload an image for the Feature Card
   */
  image?: (number | null) | MediaCloud;
  title?: string | null;
  subtitle?: string | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  desc?: string | null;
  link?: {
    type?: ('reference' | 'custom' | 'email' | 'document') | null;
    newTab?: boolean | null;
    downloadLink?: boolean | null;
    arrowLink?: boolean | null;
    pillSolid?: boolean | null;
    pillOutline?: boolean | null;
    reference?:
      | ({
          relationTo: 'grants';
          value: number | Grant;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
    email?: string | null;
    doc?: {
      relationTo: 'documents';
      value: number | Document;
    } | null;
    label?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'featCrd';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "listCrdDck".
 */
export interface ListCrdDck {
  title?: string | null;
  /**
   * Add listing cards to be displayed in the deck
   */
  cards?:
    | {
        title?: string | null;
        desc?: string | null;
        image?: (number | null) | MediaCloud;
        tags?:
          | {
              tag?: string | null;
              id?: string | null;
            }[]
          | null;
        link?: {
          type?: ('reference' | 'custom' | 'email' | 'document') | null;
          newTab?: boolean | null;
          downloadLink?: boolean | null;
          arrowLink?: boolean | null;
          pillSolid?: boolean | null;
          pillOutline?: boolean | null;
          reference?:
            | ({
                relationTo: 'grants';
                value: number | Grant;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          email?: string | null;
          doc?: {
            relationTo: 'documents';
            value: number | Document;
          } | null;
          label?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  buttons?:
    | {
        link?: {
          type?: ('reference' | 'custom' | 'email' | 'document') | null;
          newTab?: boolean | null;
          downloadLink?: boolean | null;
          arrowLink?: boolean | null;
          pillSolid?: boolean | null;
          pillOutline?: boolean | null;
          reference?:
            | ({
                relationTo: 'grants';
                value: number | Grant;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          email?: string | null;
          doc?: {
            relationTo: 'documents';
            value: number | Document;
          } | null;
          label?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'listCrdDck';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqBlk".
 */
export interface FaqBlk {
  title?: string | null;
  desc?: string | null;
  link?: {
    type?: ('reference' | 'custom' | 'email' | 'document') | null;
    newTab?: boolean | null;
    downloadLink?: boolean | null;
    arrowLink?: boolean | null;
    pillSolid?: boolean | null;
    pillOutline?: boolean | null;
    reference?:
      | ({
          relationTo: 'grants';
          value: number | Grant;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
    email?: string | null;
    doc?: {
      relationTo: 'documents';
      value: number | Document;
    } | null;
    label?: string | null;
  };
  /**
   * Add frequently asked questions to be displayed in this section
   */
  faqs?:
    | {
        question?: string | null;
        /**
         * Provide a detailed answer to the question
         */
        answer?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'faqBlk';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?: {
      relationTo: 'posts';
      value: number | Post;
    } | null;
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | MediaCloud;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'grants';
        value: number | Grant;
      } | null)
    | ({
        relationTo: 'grantcards';
        value: number | Grantcard;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'mediaCloud';
        value: number | MediaCloud;
      } | null)
    | ({
        relationTo: 'assetCloud';
        value: number | AssetCloud;
      } | null)
    | ({
        relationTo: 'documents';
        value: number | Document;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "grants_select".
 */
export interface GrantsSelect<T extends boolean = true> {
  title?: T;
  pageType?: T;
  grantCard?: T;
  heroTitle?: T;
  heroSubtitle?: T;
  bgType?: T;
  heroButtons?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              downloadLink?: T;
              arrowLink?: T;
              pillSolid?: T;
              pillOutline?: T;
              reference?: T;
              url?: T;
              email?: T;
              doc?: T;
              label?: T;
            };
        id?: T;
      };
  heroContact?:
    | T
    | {
        label?: T;
        email?: T;
      };
  contentBlocks?: T | {};
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "grantcards_select".
 */
export interface GrantcardsSelect<T extends boolean = true> {
  title?: T;
  desc?: T;
  badgeText?: T;
  badgeType?: T;
  activePeriod?: T;
  startDate?: T;
  endDate?: T;
  cardColour?: T;
  mascot?: T;
  grantSpecs?:
    | T
    | {
        spec?: T;
        id?: T;
      };
  grantUses?: T;
  cardButtons?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              downloadLink?: T;
              arrowLink?: T;
              pillSolid?: T;
              pillOutline?: T;
              reference?: T;
              url?: T;
              email?: T;
              doc?: T;
              label?: T;
            };
        id?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaCloud_select".
 */
export interface MediaCloudSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "assetCloud_select".
 */
export interface AssetCloudSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents_select".
 */
export interface DocumentsSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  avatar?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: number;
  heroSection?: {
    heroTitle?: string | null;
    heroSubtitle?: string | null;
    ctaButton?:
      | {
          link?: {
            type?: ('reference' | 'custom' | 'email' | 'document') | null;
            newTab?: boolean | null;
            downloadLink?: boolean | null;
            arrowLink?: boolean | null;
            pillSolid?: boolean | null;
            pillOutline?: boolean | null;
            reference?:
              | ({
                  relationTo: 'grants';
                  value: number | Grant;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            email?: string | null;
            doc?: {
              relationTo: 'documents';
              value: number | Document;
            } | null;
            label?: string | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  contentBlocks?:
    | (
        | Secondarycta
        | McolInfoBlock
        | GrantCardGridBlock
        | MstepProcess
        | ComparisonBlk
        | YlwDeck
        | FeatCrd
        | ListCrdDck
        | FaqBlk
      )[]
    | null;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  /**
   * Upload the logo for the header
   */
  logo?: (number | null) | AssetCloud;
  /**
   * Enable or disable the search functionality in the header
   */
  searchEnabled?: boolean | null;
  /**
   * Select languages for the website
   */
  languages: (
    | 'en'
    | 'ar'
    | 'bi'
    | 'bn-IN'
    | 'br'
    | 'ch'
    | 'prs-Arab'
    | 'km'
    | 'hi'
    | 'ms'
    | 'ne'
    | 'ps-Arab'
    | 'pcm'
    | 'si'
    | 'tl'
    | 'ta'
    | 'th'
    | 'vi'
    | 'ur'
  )[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  orgName: string;
  /**
   * Upload the logo for the footer
   */
  logo?: (number | null) | AssetCloud;
  newsletterSub?: {
    description?: string | null;
    inputPlaceholder?: string | null;
    buttonText?: string | null;
    url?: string | null;
  };
  donateCTA: {
    heading: string;
    /**
     * A short description to encourage donations
     */
    description: string;
    buttonText: string;
    /**
     * Enter a URL to the donation platform (https://example.com/donate)
     */
    url: string;
  };
  smLinksGroup?: {
    /**
     * Add links to your social media profiles. Icons will be auto-selected by type.
     */
    smLinks?:
      | {
          smType?:
            | ('fb' | 'insta' | 'threads' | 'mast' | 'wa' | 'linkedin' | 'scloud' | 'med' | 'sstack' | 'spotify')
            | null;
          /**
           * Enter an external URL (https://example.com)
           */
          url: string;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nav".
 */
export interface Nav {
  id: number;
  menuItems?:
    | {
        label: string;
        navItems?:
          | {
              link?: {
                type?: ('reference' | 'custom' | 'email' | 'document') | null;
                newTab?: boolean | null;
                downloadLink?: boolean | null;
                arrowLink?: boolean | null;
                pillSolid?: boolean | null;
                pillOutline?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'grants';
                      value: number | Grant;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: number | Post;
                    } | null);
                url?: string | null;
                email?: string | null;
                doc?: {
                  relationTo: 'documents';
                  value: number | Document;
                } | null;
                label?: string | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  t_and_c?: {
    relationTo: 'posts';
    value: number | Post;
  } | null;
  privacy?: {
    relationTo: 'posts';
    value: number | Post;
  } | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contactInfo".
 */
export interface ContactInfo {
  id: number;
  emails?:
    | {
        /**
         * Enter label for the contact (example: For Whistleblower Concerns)
         */
        label: string;
        email: string;
        emailType: 'info' | 'grants' | 'whistle' | 'wsc' | 'general';
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage_select".
 */
export interface HomepageSelect<T extends boolean = true> {
  heroSection?:
    | T
    | {
        heroTitle?: T;
        heroSubtitle?: T;
        ctaButton?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    downloadLink?: T;
                    arrowLink?: T;
                    pillSolid?: T;
                    pillOutline?: T;
                    reference?: T;
                    url?: T;
                    email?: T;
                    doc?: T;
                    label?: T;
                  };
              id?: T;
            };
      };
  contentBlocks?: T | {};
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  logo?: T;
  searchEnabled?: T;
  languages?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  orgName?: T;
  logo?: T;
  newsletterSub?:
    | T
    | {
        description?: T;
        inputPlaceholder?: T;
        buttonText?: T;
        url?: T;
      };
  donateCTA?:
    | T
    | {
        heading?: T;
        description?: T;
        buttonText?: T;
        url?: T;
      };
  smLinksGroup?:
    | T
    | {
        smLinks?:
          | T
          | {
              smType?: T;
              url?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nav_select".
 */
export interface NavSelect<T extends boolean = true> {
  menuItems?:
    | T
    | {
        label?: T;
        navItems?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    downloadLink?: T;
                    arrowLink?: T;
                    pillSolid?: T;
                    pillOutline?: T;
                    reference?: T;
                    url?: T;
                    email?: T;
                    doc?: T;
                    label?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  t_and_c?: T;
  privacy?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contactInfo_select".
 */
export interface ContactInfoSelect<T extends boolean = true> {
  emails?:
    | T
    | {
        label?: T;
        email?: T;
        emailType?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | MediaCloud;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}